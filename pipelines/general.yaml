apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: general
spec:
  params:
    - name: app-name
      type: string
      description: Application name
    - name: git-repository
      type: string
      description: Source code repository
    - name: img-registry
      type: string
      description: Destination registry for built image
    - name: sonar-url
      type: string
      description: SonarQube server URL
      default: http://sonarqube.sonarqube
    - name: sonar-org
      type: string
      description: The organization in sonarqube where the project exists
      default: user
    - name: build-tls-verify
      type: string
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      default: "true"
    - name: img-scan-args
      type: array
      description: The Arguments to be passed to the Trivy scan command
      default:
        - "image"
        - "--exit-code"
        - "1"
        - "--severity"
        - "HIGH,CRITICAL"
  workspaces:
    - name: shared-data
    - name: sonar-credentials
    - name: registry-config
    - name: manifest-dir
  tasks:
    - name: git-clone
      params:
        - name: url
          value: "$(params.git-repository)"
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-data
    - name: detect-secrets
      taskRef:
        name: detect-secrets
      runAfter:
        - git-clone
      workspaces:
        - name: source
          workspace: shared-data
    - name: code-scan
      params:
        - name: SONAR_HOST_URL
          value: "$(params.sonar-url)"
        - name: SONAR_PROJECT_KEY
          value: "$(params.app-name)"
        - name: SONAR_ORGANIZATION
          value: "$(params.sonar-org)"
      taskRef:
        name: sonarqube-scanner
      runAfter:
        - detect-secrets
      workspaces:
        - name: source
          workspace: shared-data
        - name: sonar-credentials
          workspace: sonar-credentials
    - name: dockerfile-lint
      taskRef:
        name: hadolint
      runAfter:
        - detect-secrets
      workspaces:
        - name: source
          workspace: shared-data
    - name: img-build
      taskRef:
        name: buildah
      params:
        - name: IMAGE
          value: "$(params.img-registry)/$(params.app-name):$(tasks.git-clone.results.commit)"
        - name: TLSVERIFY
          value: $(params.build-tls-verify)
      runAfter:
        - code-scan
        - dockerfile-lint
      workspaces:
        - name: source
          workspace: shared-data
        - name: dockerconfig
          workspace: registry-config
    - name: img-scan
      taskRef:
        name: trivy-scanner
      params:
        - name: IMAGE_PATH
          value: "$(params.img-registry)/$(params.app-name):$(tasks.git-clone.results.commit)"
        - name: ARGS
          value: ["$(params.img-scan-args[*])"]
      runAfter:
        - img-build
      workspaces:
        - name: manifest-dir
          workspace: manifest-dir
